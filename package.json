{
  "name": "stardust-engine",
  "version": "0.1.0",
  "description": "Gaming Infrastructure on MultiversX - Blockchain-powered gaming platform with smart contracts, NFT integration, and cross-game asset management",
  "keywords": [
    "multiversx",
    "blockchain",
    "gaming",
    "nft",
    "web3",
    "smart-contracts",
    "defi",
    "gaming-infrastructure"
  ],
  "author": "George Pricop <pricopgeorge@gmail.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Gzeu/StardustEngine.git"
  },
  "homepage": "https://github.com/Gzeu/StardustEngine#readme",
  "bugs": {
    "url": "https://github.com/Gzeu/StardustEngine/issues"
  },
  "workspaces": [
    "frontend",
    "api"
  ],
  "scripts": {
    "dev": "npm run dev --workspace=frontend",
    "dev:frontend": "npm run dev --workspace=frontend",
    "dev:api": "npm run dev --workspace=api",
    "build": "npm run build --workspace=frontend",
    "build:frontend": "npm run build --workspace=frontend",
    "build:api": "npm run build --workspace=api",
    "start": "npm run start --workspace=frontend",
    "start:frontend": "npm run start --workspace=frontend",
    "start:api": "npm run start --workspace=api",
    "lint": "npm run lint --workspaces --if-present",
    "lint:fix": "npm run lint:fix --workspaces --if-present",
    "test": "npm run test --workspaces --if-present",
    "test:watch": "npm run test:watch --workspaces --if-present",
    "test:coverage": "npm run test:coverage --workspaces --if-present",
    "install:all": "npm install && npm install --workspaces",
    "clean": "npm run clean --workspaces --if-present && rm -rf node_modules",
    "clean:frontend": "npm run clean --workspace=frontend",
    "clean:api": "npm run clean --workspace=api",
    "contracts:build": "cd stardust-contracts && cargo build --release",
    "contracts:test": "cd stardust-contracts && cargo test",
    "contracts:deploy:devnet": "cd stardust-contracts && mxpy contract deploy --chain=D",
    "contracts:deploy:testnet": "cd stardust-contracts && mxpy contract deploy --chain=T",
    "localnet:setup": "mxpy localnet setup",
    "localnet:start": "mxpy localnet start",
    "localnet:stop": "mxpy localnet stop",
    "typecheck": "npm run typecheck --workspaces --if-present",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,css,md}\" --ignore-path .gitignore",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,css,md}\" --ignore-path .gitignore",
    "docker:dev": "docker-compose up -d",
    "docker:build": "docker-compose build",
    "docker:stop": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "setup": "npm run install:all && npm run build",
    "health-check": "curl -f http://localhost:3000/api/health || echo 'Health check failed'",
    "deploy:github": "npm run deploy:github --workspace=frontend",
    "deploy:vercel": "vercel --prod"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "devDependencies": {
    "prettier": "^3.0.0",
    "concurrently": "^8.2.0",
    "cross-env": "^7.0.3",
    "rimraf": "^5.0.0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}